#!/bin/sh

set -x

check_for_zsh() {
  if !(echo $SHELL | grep zsh > /dev/null)
  then
    echo "Switch to using zsh before continuing"
    exit 1
  fi

  echo "zsh ✓"
}

check_for_tools() {
  if [ $(uname) = "FreeBSD" ]; then
    PKGMGR_INSTALL="sudo pkg install"
  elif [ $(uname) = "Darwin" ]; then
    PKGMGR_INSTALL="brew install"
  elif [ $(cat /etc/os-release | grep Fedora; echo $?) -eq "0" ]; then
    PKGMGR_INSTALL="sudo dnf install"
  elif [ $(cat /etc/os-release | grep Debian; echo $?) -eq "0" ]; then
    PKGMGR_INSTALL="sudo apt install"
  else
    echo "Unsupported OS. Chickening out!!!"
    exit 23
  fi
  ${PKGMGR_INSTALL} eza
  ${PKGMGR_INSTALL} nvim
  ${PKGMGR_INSTALL} bat
  ${PKGMGR_INSTALL} fzf
  ${PKGMGR_INSTALL} tmux
  ${PKGMGR_INSTALL} rustup && rustup-init
  ${PKGMGR_INSTALL} cmake
  ${PKGMGR_INSTALL} starship
  if [ ! -d ~/.asdf ]; then
    git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
  fi
  rustup component add rust-analyzer
}

setup_vim() {
  if [ ! -f ~/.config/nvim/autoload/plug.vim ]; then
    curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    nvim +PlugInstall +qall
  fi

  mkdir -p ~/.config/nvim/tmp
  mkdir -p ~/.config/nvim/tmp/backup
  mkdir -p ~/.config/nvim/tmp/undo

  echo "Vim ✓"
}

setup_tmux() {
  if [ ! -d ~/.tmux/plugins/tpm ]; then
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
  fi

  tmux start-server
  tmux new-session -d
  ~/.tmux/plugins/tpm/scripts/install_plugins.sh
  tmux kill-server

  echo "tmux ✓"
}

check_for_homebrew() {
  if [ $(uname) = "Darwin" ]; then
    if !(which brew > /dev/null)
    then
      echo "Install homebrew before continuing"
      exit 1
    fi

    echo "homebrew ✓"
  fi
}

make_local_configs() {
  touch ~/.vimrc.local
  touch ~/.tmux.conf.local
  touch ~/.zshrc.local
}

check_for_zsh
script/setup_symlinks
setup_vim
check_for_homebrew
setup_tmux
make_local_configs
check_for_tools
